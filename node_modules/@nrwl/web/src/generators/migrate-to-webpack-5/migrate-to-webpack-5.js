"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.webMigrateToWebpack5Schematic = exports.webMigrateToWebpack5Generator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const run_tasks_in_serial_1 = require("@nrwl/workspace/src/utilities/run-tasks-in-serial");
const basePackages = {
    'copy-webpack-plugin': '^9.0.1',
    webpack: '^5.47.0',
    'webpack-merge': '^5.8.0',
    'webpack-node-externals': '^3.0.0',
};
const webPackages = {
    'mini-css-extract-plugin': '^2.1.0',
    'source-map-loader': '^3.0.0',
    'terser-webpack-plugin': '^5.1.1',
    'webpack-dev-server': '4.0.0-rc.0',
    'webpack-sources': '^3.0.2',
    'react-refresh': '^0.10.0',
    '@pmmmwh/react-refresh-webpack-plugin': '0.5.0-rc.2',
};
function webMigrateToWebpack5Generator(tree, schema) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const packages = Object.assign(Object.assign({}, basePackages), webPackages);
        const tasks = [];
        devkit_1.logger.info(`NX Adding webpack 5 to workspace.`);
        // Removing the packages ensures that the versions will be updated when adding them after
        tasks.push(devkit_1.removeDependenciesFromPackageJson(tree, [], Object.keys(packages)));
        tasks.push(devkit_1.addDependenciesToPackageJson(tree, {}, packages));
        return run_tasks_in_serial_1.runTasksInSerial(...tasks);
    });
}
exports.webMigrateToWebpack5Generator = webMigrateToWebpack5Generator;
exports.default = webMigrateToWebpack5Generator;
exports.webMigrateToWebpack5Schematic = devkit_1.convertNxGenerator(webMigrateToWebpack5Generator);
//# sourceMappingURL=migrate-to-webpack-5.js.map