import { FileData, NxJsonConfiguration, ProjectGraph, WorkspaceJsonConfiguration } from '@nrwl/devkit';
/**
 * Synchronously reads the latest cached copy of the workspace's ProjectGraph.
 * @throws {Error} if there is no cached ProjectGraph to read from

 * @param {string} projectGraphVersion Version to map ProjectGraph to
 * @returns {ProjectGraph}
 */
export declare function readCachedProjectGraph(projectGraphVersion?: string): ProjectGraph;
/**
 * Migrate project graph from v3 to v4
 * @param {ProjectGraph} projectGraph
 */
export declare function projectGraphMigrate3to4(projectGraph: ProjectGraph): ProjectGraph;
/**
 * Backwards compatibility adapter for project Nodes
 * @param {ProjectGraph} projectGraph
 * @returns {ProjectGraph}
 */
export declare function projectGraphCompat4to3(projectGraph: ProjectGraph): ProjectGraph;
/**
 * Backwards compatibility adapter for FileData
 * @param {FileData} fileData
 * @param {string?} projectGraphVersion
 * @returns
 */
export declare function projectFileDataCompatAdapter(fileData: FileData, projectGraphVersion: string): FileData;
export declare function createProjectGraphAsync(projectGraphVersion?: string): Promise<ProjectGraph>;
/**
 * @deprecated This function is deprecated in favor of the new asynchronous version {@link createProjectGraphAsync}
 */
export declare function createProjectGraph(workspaceJson?: WorkspaceJsonConfiguration, nxJson?: NxJsonConfiguration, workspaceFiles?: FileData[], projectGraphVersion?: string): ProjectGraph;
/**
 * @deprecated This function is deprecated in favor of {@link readCachedProjectGraph}
 */
export declare function readCurrentProjectGraph(): ProjectGraph | null;
